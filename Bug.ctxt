#BlueJ class context
comment0.target=Bug
comment0.text=\r\n\ The\ Bug\ class\ represents\ the\ bug\ playing\ character,\ which\ has\ a\ location,\ cells\ adjacent\ to\ that\r\n\ location,\ a\ symbol,\ as\ well\ as\ keeping\ track\ of\ the\ floor\ and\ maxMoves.\r\n\r\n\ @author\ Caitlin\ G.\r\n\ @version\ 4.2.23\r\n\ \r\n
comment1.params=floorSize\ maxTotalMoves\ startingLocation
comment1.target=Bug(int,\ int,\ Coord)
comment1.text=\r\n\ Constructor\ for\ Bug.\ Initializes\ floorSize,\ maxMoves,\ and\ startingLocation\ from\r\n\ the\ Converse\ class.\r\n\ @param\ floorSize\r\n\ @param\ maxMoves\r\n\ @param\ startingLocation\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ toString\ that\ represents\ the\ floor\ after\ the\ bug\ has\ walked\ on\ it,\r\n\ and\ a\ message\ stating\ whether\ the\ player\ has\ won\ or\ lost.\r\n\ @return\ A\ string\ with\ the\ game\ board\ (floor)\ and\ a\ win/lose\ msg.\r\n
comment2.params=maxTotalMoves\ startingLocation
comment2.target=Bug(int,\ Coord)
comment2.text=\r\n\ Constructor\ for\ Bug.\ Initializes\ floorSize,\ maxMoves,\ and\ startingLocation\ from\r\n\ the\ Converse\ class.\ Uses\ default\ of\ 3\ for\ floorSize.\r\n\ @param\ maxMoves\r\n\ @param\ startingLocation\r\n
comment3.params=start
comment3.target=Coord[]\ makeAdjacent(Coord)
comment3.text=\r\n\ (row,\ column)\ of\ adjacent\ cells\ given\ a\ bug's\ location,\ noted\ by\ X\ below\:\r\n\ Starting\ clockwise\ from\ upper\ left\ (you\ can\ start\ relative\ to\ any\ location\ here)\r\n\r\n\ \ 0\ |\ 1\ |\ 2\r\n\ ---|---|---\r\n\ \ 7\ |\ X\ |\ 3\r\n\ ---|---|---\r\n\ \ 6\ |\ 5\ |\ 4\r\n\r\n\ The\ coordinate\ values\ are\ relative\ to\ the\ bug's\ location\!\r\n\ Just\ add\ the\ appropriate\ row/col\ values\ to\ the\ bug's\ current\ location.\r\n\ So,\ the\ relative/adjacent\ coordinates\ are\ as\ follows\:\r\n\ 0\:\ (-1,\ 1)\ 1\:\ (\ 0,\ 1)\ 2\:\ (\ 1,\ 1)\r\n\ 3\:\ (\ 1,\ 0)\ 4\:\ (\ 1,-1)\ 5\:\ (\ 0,-1)\r\n\ 6\:\ (-1,-1)\ 7\:\ (-1,\ 0)\r\n\ Example\:\ adding\ coord(-1,\ 1)\ to\ bug's\ last\ known\ location\ specified\ by\ coord\ named\ 'X',\r\n\ will\ move\ the\ bug\ to\ the\ upper\ left\ cell\ named\ '0'\ as\ long\ as\ cell\ 0\ is\ a\ valid\ cell.\r\n\ If\ the\ coord\ named\ 'X'\ is\ located\ at\ (0,0)\ in\ the\ floor's\ array,\ this\ is\ not\ a\ valid\ cell\ to\ move\ to.\r\n\r\n
comment4.params=
comment4.target=void\ walk()
comment4.text=\r\n\ The\ bug\ makes\ a\ single\ move\ to\ a\ random\ valid\ location\r\n\ that\ is\ adjacent\ to\ its\ last\ location\ on\ the\ floor,\ and\r\n\ updates\ its\ location\ to\ the\ new\ location.\r\n
comment5.params=coord
comment5.target=boolean\ isValidMove(Coord)
comment5.text=\r\n\ Returns\ whether\ the\ given\ coordinate\ is\ a\ valid\ move\ based\r\n\ on\ the\ bug's\ current\ location.\r\n\ @param\ coord\ The\ potential\ coordinate.\r\n\ @return\ boolean\ Whether\ the\ potential\ coordinate\ is\ valid.\r\n
comment6.params=
comment6.target=boolean\ isFinishedWalking()
comment6.text=\r\n\ Returns\ whether\ the\ bug\ is\ done\ walking,\ which\ is\ either\ when\r\n\ all\ of\ the\ elements\ of\ the\ floor\ are\ populated\ with\ the\ bug\r\n\ symbol\ or\ the\ bug\ has\ reached\ its\ max\ total\ moves.\r\n\ @return\ boolean\ Whether\ the\ bug\ has\ finished\ walking.\r\n
comment7.params=
comment7.target=boolean\ isFloorFull()
comment7.text=\r\n\ Returns\ whether\ the\ floor\ is\ fully\ marked\ up\ with\ 'X's\ that\r\n\ represent\ where\ the\ bug\ has\ walked.\r\n\ @return\ boolean\ Whether\ the\ floor\ is\ full.\r\n
comment8.params=
comment8.target=void\ startWalking()
comment8.text=\r\n\ Begins\ the\ game,\ and\ send\ the\ bug\ off\ walking\ till\ it\ is\ finished\r\n\ walking.\r\n
comment9.params=
comment9.target=boolean\ isWinner()
comment9.text=\r\n\ Returns\ whether\ the\ bug\ has\ won\ the\ game,\ meaning\ the\ floor\ is\r\n\ full\ and\ the\ bug\ hasn't\ exceeding\ its\ maximum\ moves.\r\n\ @return\ boolean\ Whether\ the\ bug\ has\ won\ the\ game.\r\n
numComments=11
